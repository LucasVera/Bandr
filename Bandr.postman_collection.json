{
	"info": {
		"_postman_id": "36c3d1fc-a8d8-45e7-95e4-5b34d0babb72",
		"name": "Bandr",
		"description": "Bandr Postman collection\r\n\r\nLists all endpoints for easier testing when executing the application locally",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password!!!!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/auth/register",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"auth",
						"register"
					]
				},
				"description": "Register with email and password"
			},
			"response": []
		},
		{
			"name": "Sign In",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//pm.globals.set(\"variable_key\", \"variable_value\");\r",
							"pm.test(\"Set global variables\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(jsonData.data.token, jsonData.data.user.id);\r",
							"\r",
							"    pm.collectionVariables.set(\"token\", jsonData.data.token);\r",
							"    pm.collectionVariables.set(\"userId\", jsonData.data.user.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password!!!!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/auth/sign-in",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"auth",
						"sign-in"
					]
				},
				"description": "Sign in with email and password\n\nThis endpoint saves the userId and the JWT in two collection variables, then those are already set for further endpoints automatically (in the headers)"
			},
			"response": []
		},
		{
			"name": "Verify Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/auth/verify-token",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"auth",
						"verify-token"
					]
				},
				"description": "Verify the sent token is valid and corresponds to the given user Id"
			},
			"response": []
		},
		{
			"name": "Create band",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Bandddd 5\",\r\n    \"genres\": [\r\n        \"pop\"\r\n    ],\r\n    \"memberNames\": [\r\n        \"someone\",\r\n        \"someone\",\r\n        \"someone\"\r\n    ],\r\n    \"foundedDate\": \"2010-01-01\",\r\n    \"website\": \"http://www.some-band.com\",\r\n    \"active\": false,\r\n    \"public\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band"
					]
				},
				"description": "Creates a bands according to given body"
			},
			"response": []
		},
		{
			"name": "Delete all private bands",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/all",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"all"
					]
				},
				"description": "Deletes all user's private bands"
			},
			"response": []
		},
		{
			"name": "Delete one private band",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"60bf78de282c413c9c49aa2e\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band"
					]
				},
				"description": "Deletes specified user's band (bandId)"
			},
			"response": []
		},
		{
			"name": "Update one private band",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"60bf78f8282c413c9c49aa2f\",\r\n    \"name\": \"The Beatlesssss\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band"
					]
				},
				"description": "Updates all specified parameters of a band. If a parameter is not specified, it will remain as the current value"
			},
			"response": []
		},
		{
			"name": "Like one public band",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"60bed1426701722910432fd7\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/like",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"like"
					]
				},
				"description": "Adds the current user to the likedBy array of the band"
			},
			"response": []
		},
		{
			"name": "Get all public bands",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/true",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"true"
					]
				},
				"description": "Gets All public bands (no pagination)"
			},
			"response": []
		},
		{
			"name": "Get all public bands (pagination)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/true/1/2",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"true",
						"1",
						"2"
					]
				},
				"description": "Get all public bands with pagination. First parameter in the path is if querying public bands (in this case should be true). Second parameter is the limit (max number of records to return in each page) and third parameter is page number\n\n**/band/{public}/{limit}/{page}**"
			},
			"response": []
		},
		{
			"name": "Get all private bands",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/false",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"false"
					]
				},
				"description": "Gets all user's private bands (no pagination)"
			},
			"response": []
		},
		{
			"name": "Get all private bands (pagination)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/false/1/1",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"false",
						"1",
						"1"
					]
				},
				"description": "Get all user's private bands with pagination. First parameter in the path is if querying public bands (in this case should be false). Second parameter is the limit (max number of records to return in each page) and third parameter is page number\n\n**/band/{public}/{limit}/{page}**"
			},
			"response": []
		},
		{
			"name": "Get all liked public bands",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/like",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"like"
					]
				},
				"description": "Gets all user's public liked bands (no pagination)"
			},
			"response": []
		},
		{
			"name": "Get all liked public bands (pagination)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = pm.collectionVariables.get(\"token\");\r",
							"var userId = pm.collectionVariables.get(\"userId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/band/like/2/1",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"band",
						"like",
						"2",
						"1"
					]
				},
				"description": "localhost:3000/dev/band/like/2/1\nGets all user's public liked bands with pagination. First parameter in the path is the limit (max number of records to return in each page) and second parameter is page number\n\n**/band/{limit}/{page}**"
			},
			"response": []
		},
		{
			"name": "Get random integer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "userId",
						"value": "{{userId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/dev/random",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"dev",
						"random"
					]
				},
				"description": "Gets a random integer in the range of [1-100] from an external public API (https://randomkey.io/)"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}